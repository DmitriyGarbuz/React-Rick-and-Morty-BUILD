{"version":3,"sources":["components/RickAudio.mp3","components/persons.view.js","components/persons.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TYPES","ACTIVE","PASIVE","BackgroundDiv","styled","div","GlobalDiv","Buttons","button","props","type","loader","Person","state","name","image","src","this","alt","width","Component","PersonsList","getPersons","axios","get","then","data","setState","persons","results","info","next","prev","getTypes","audio","play","console","log","length","isEdit","isEditPrev","typePrev","isEditNext","typeNext","prevClick","nextClick","Audio","soundFile","map","person","key","id","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.278b42d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RickAudio.bd903cb1.mp3\";","import styled from \"styled-components\";\r\n\r\nconst TYPES = {\r\n    ACTIVE: \"#4CAF50\",\r\n    PASIVE: \"#5e5e5e\"\r\n}\r\n\r\nexport default {\r\nBackgroundDiv: styled.div`\r\nfloat:left; \r\nwidth:200px; \r\nheight:200px;\r\nmargin: 2px;\r\nmargin-top: 13px;\r\n`,\r\nGlobalDiv: styled.div`\r\nfloat:left; \r\n`,\r\nButtons: styled.button`\r\nmargin-top: 20px;\r\nmargin-left: 3px;\r\ndisplay: inline-block;\r\npadding: 15px 25px;\r\nfont-size: 24px;\r\ncursor: pointer;\r\ntext-align: center;\r\noutline: none;\r\ncolor: #fff;\r\nbackground-color: ${((props) => {\r\nreturn props.type && TYPES[props.type] \r\n})}\r\nborder-radius: 15px;\r\nbox-shadow: 0 9px #999;\r\n`,\r\nloader: styled.div`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 30%;\r\n    z-index: 1;\r\n    width: 150px;\r\n    height: 150px;\r\n    margin: -75px 0 0 -75px;\r\n    border: 16px solid #f3f3f3;\r\n    border-radius: 50%;\r\n    border-top: 16px solid #3498db;\r\n    width: 120px;\r\n    height: 120px;\r\n    -webkit-animation: spin 2s linear infinite;\r\n    animation: spin 2s linear infinite;\r\n    @-webkit-keyframes spin {\r\n        0% { -webkit-transform: rotate(0deg); }\r\n        100% { -webkit-transform: rotate(360deg); }\r\n    }\r\n      @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n      }\r\n  `\r\n}","import React, {Component} from 'react';\r\nimport Persons from './persons.view';\r\nimport axios from 'axios';\r\nimport soundFile from './RickAudio.mp3';\r\n//setState()\r\n\r\n\r\nclass Person extends Component {\r\n  state = {\r\n    name: this.props.name || '',\r\n    image: this.props.image || '',\r\n  }\r\n  render() {\r\n    return (\r\n      <Persons.BackgroundDiv>\r\n       <img src={this.state.image} alt={this.state.name} width=\"150\"/>\r\n        <h3>{this.state.name}</h3>\r\n      </Persons.BackgroundDiv>\r\n  )};\r\n}\r\n\r\n\r\n\r\nclass PersonsList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      audio: new Audio(soundFile),\r\n      persons: '',\r\n      image: '',\r\n      isEditPrev: true,\r\n      isEditNext: true,\r\n      typePrev: '',\r\n      typeNext: '',\r\n      info: '',\r\n      next:  null ,\r\n      prev:  null ,\r\n    }\r\n    this.getPersons()\r\n  }\r\n\r\ngetPersons = () => {\r\n  axios.get('https://rickandmortyapi.com/api/character/')\r\n  .then(({data}) => {\r\nthis.setState({persons: data.results, image: data.image, info: data.info, next: data.info.next, prev: data.info.prev })\r\nthis.getTypes();\r\nthis.state.audio.play();\r\nconsole.log (this.state.persons.length, 'long');\r\nconsole.log(this.state.persons, 'info');\r\n console.log(this.state.info, 'info');\r\n console.log(this.state.next, 'next');\r\n console.log(this.state.isEdit, ' isEdit');\r\n console.log(this.state.prev, 'prev');\r\n  })\r\n}\r\n\r\ngetTypes = () => {\r\n  if (this.state.prev != '') {\r\n    this.setState({isEditPrev: true, typePrev: \"ACTIVE\"})\r\n  }else{\r\n    this.setState({isEditPrev: false, typePrev: \"PASIVE\"})\r\n  }\r\n  if (this.state.next != '') {\r\n    this.setState({isEditNext: true, typeNext: \"ACTIVE\"})\r\n  }else{\r\n    this.setState({isEditNext: false, typeNext: \"PASIVE\"})\r\n  }\r\n}\r\n\r\nprevClick = () => {\r\n  console.log(this.state.isEditPrev);\r\n  if(this.state.isEditPrev != false) {\r\n  this.state.audio.play();\r\n  axios.get(this.state.prev)\r\n  .then(({data}) => {\r\nthis.setState({persons: data.results, image: data.image, info: data.info, next: data.info.next, prev: data.info.prev })\r\nthis.getTypes();\r\n  })\r\n}\r\n}\r\n\r\nnextClick = () => {\r\nif(this.state.isEditNext != false) {\r\n  this.state.audio.play();\r\n  axios.get(this.state.next)\r\n  .then(({data}) => {\r\nthis.setState({persons: data.results, image: data.image, info: data.info, next: data.info.next, prev: data.info.prev })\r\nthis.getTypes();\r\n  })\r\n}\r\n}\r\n\r\nrender() {\r\n    return(\r\n      <div>\r\n      <Persons.GlobalDiv>\r\n      {this.state.persons ?\r\n         this.state.persons.map(person =>\r\n          <Person {...person} key={person.id}/>\r\n        ) : <Persons.loader/>\r\n      }\r\n      </Persons.GlobalDiv>\r\n        <Persons.Buttons type={this.state.typePrev} onClick = {this.prevClick}>prev</Persons.Buttons>\r\n        <Persons.Buttons type={this.state.typeNext} onClick = {this.nextClick}>next</Persons.Buttons>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PersonsList;\r\n\r\n// Попробовать вытянуть других персонажей по локализации по клику на кнопку","import React from 'react';\r\nimport Person from './components/persons';\r\n\r\n//setState()\r\n\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div>\r\n      <Person />\r\n    </div>\r\n)};\r\n\r\n  export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}